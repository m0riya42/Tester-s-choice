<Application x:Class="PLWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PLWPF"
             StartupUri="OpenPage.xaml">
 
    <Application.Resources>
     

        <!--BUTTON &&&&&&&&&&&&&&&&&&& STYLES-->
        <!-- blue button style-->
        <Style  x:Key="BlueButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#6f84a5"/>
            <Setter Property="Background" Value="#6f84a5"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily"  Value="Yu Gothic Medium"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         BorderBrush="Gray"
                         CornerRadius="3"      
                         Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter 
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"            
                        RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#d5cbb2"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--black button style-->
        <Style  x:Key="BlackButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF535860"/>
            <Setter Property="Background" Value="#FF0C1F31"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily"  Value="Yu Gothic Medium"/>
            <Setter Property="Padding" Value="0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         BorderBrush="Gray"
                         CornerRadius="3"      
                         Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter 
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"            
                        RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#d5cbb2"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--FirstPage button style-->
        <Style  x:Key="FirstPageButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="0"
                         BorderBrush="Transparent"
                         CornerRadius="3"      
                         Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter 
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"            
                        RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Transparent"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!--left menu button style-->
        <Style  x:Key="LeftMenueButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF535860"/>
            <Setter Property="Background" Value="#FF0C1F31"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily"  Value="Yu Gothic Medium"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="Margin" Value= "0,0,0.2,0"/>
            <Setter Property="Padding" Value="0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         BorderBrush="Gray"
                         CornerRadius="3"      
                         Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter 
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"            
                        RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#143553"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--exit button-->
        <Style  x:Key="ExitButtonStyle" TargetType="Button">
            <Setter Property="Content" Value="X"/>
            <Setter Property="Foreground" Value="#d5cbb2"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily"  Value="Yu Gothic Medium"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="Margin" Value= "740,-4,-16,-2.8"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="0"
                         BorderBrush="Transparent"
                         CornerRadius="60"      
                         Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter 
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"            
                        RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#143553"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False"  RepeatBehavior="1x"/>
                                <ColorAnimation To="White"
                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>

                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>

                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>

                </Trigger>
            </Style.Triggers>
        </Style>

        <!--scedual button Style-->
        <Style  x:Key="SCButtonStyle" TargetType="Button">
            <Setter Property="BorderBrush" Value="#6f84a5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#d5cbb2"/>
                                            <Setter Property="BorderBrush" Value="#6f84a5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <ContentPresenter></ContentPresenter>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

          
          
        </Style>


        <!--LABEL &&&&&&&&&&&&&&&&&& STAYLS-->
        <!--regular labels-->
        <Style x:Key="RegularLabel" TargetType="Label">
            <Setter Property="Height" Value="21"/>
            <Setter Property="Width" Value="98"/>
            <Setter Property="Padding" Value="5,0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="RegularThinLabel" TargetType="Label" BasedOn="{ StaticResource RegularLabel}">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="138"/>
            <Setter Property="FontWeight" Value="Regular"/>
        </Style>
        <Style x:Key="GridTitlesStyle" TargetType="Label">
            <Setter Property="Background" Value="#FF0C1F31"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="78"/>
            <Setter Property="Margin" Value="1,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>

        </Style>

        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="RenderTransformOrigin" Value="1.043,1.674"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="26"/>
            <Setter Property="Margin" Value="0,0,-0.4,0"/>
           
        </Style>
        
        <!--Admin Page Labels-->
     

        <Style x:Key="SortTitle" TargetType="Label">

            <Setter Property="FontFamily" Value="Yu Gothic UI Semibold"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="7,1,5,7"/>
       

        </Style>
        
        <!--Text Box &&&&&&&&&&&&&&&&&& STAYLS-->
        <Style x:Key="LockedTextBox" TargetType="TextBox">
            <Setter Property="Height" Value="21"/>
            <Setter Property="Width" Value="134"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Padding" Value="0,-1,0,0"/>
            <Setter Property="BorderBrush" Value="LightSlateGray"/>

        </Style>
        <Style x:Key="OpenTextBox" TargetType="TextBox">
            <Setter Property="Height" Value="21"/>
            <Setter Property="Width" Value="134"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="0,-1,0,0"/>
            <Setter Property="BorderBrush" Value="LightSlateGray"/>
        </Style>

                    <!--Data Grid Styls-->
        <Style x:Name="DataGridStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="#FF0C1F31"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily"  Value="Yu Gothic Medium"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="Margin" Value= "0,0,0.2,0"/>
            <Setter Property="Padding" Value="0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         BorderBrush="Gray"
                         CornerRadius="3"      
                         Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter 
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"            
                        RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#143553"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Name="DataGridStyle2" TargetType="DataGrid" >
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style x:Name="DataGridStyle3" TargetType="DataGridCell">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         BorderBrush="Gray"
                         CornerRadius="3"      
                         Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter 
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"            
                        RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" Value="#d5cbb2" />
                    <Setter Property="Foreground" Value="Black" />

                </Trigger>

            </Style.Triggers>

        </Style>
            
        
        <!--TAB STYLES-->
        <Style x:Name="Tab" TargetType="TabItem">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="FontFamily"  Value="Yu Gothic Medium"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="#6f84a5" CornerRadius="15,15,0,0">
                            <ContentPresenter Content="{Binding Path=Header, RelativeSource={RelativeSource FindAncestor,AncestorType=TabItem,AncestorLevel=1}}"   HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="true">

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border Background="#143553" CornerRadius="15,15,0,0">
                                    <ContentPresenter
                  Content="{Binding Path=Header, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem, AncestorLevel=1}}" HorizontalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
       
        <!--Radio Box-->
        <Style TargetType="{x:Type RadioButton}" x:Key="radio2">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="White" Cursor="Hand">
                            <BulletDecorator.Bullet>

                                <Grid Height="18" Width="18">
                                    <!--Define size of the Bullet-->
                                    <Polygon Name="TickMark"
                            Points="4,9 8,15 15,3 8,11 4,9"
                            Stroke="#FF0092B2"
                            StrokeThickness="1"
                            Visibility="Hidden"
                            Fill="Blue">
                                    </Polygon>

                                    <Border CornerRadius="3,0,0,3" BorderBrush="#FF565656" BorderThickness="2" />

                                </Grid>
                            </BulletDecorator.Bullet>

                            <!--Text element-->
                            <Border Background="#FF565656" CornerRadius="0,3,3,0" Width="50" Height="18">
                                <TextBlock Margin="3,1,0,0" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12">
                            <ContentPresenter />
                                </TextBlock>
                            </Border>
                        </BulletDecorator>


                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="TickMark" Property="Visibility" Value="Visible"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type RadioButton}" x:Key="buttonstripe1">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Cursor="Hand">
                            <!--Text element-->
                            <Border Width="60" Height="20" CornerRadius="3" BorderBrush="#FFE2E2E2" BorderThickness="1">
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <!--We don't need any bullet, cause our border is the switching element-->
                                    <Border Margin="5,0,48,0" Background="#FFCDCDCD" CornerRadius="1" Name="RadioMark" />
                                    <!-- To change the apearance to button stripe 2, edit the margins! -->
                                </Grid>

                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0" />
                                        <GradientStop Color="#FFE2E2E2" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </BulletDecorator>

                        <!--If item is checked, trigger the visibility of the mark-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioMark" Property="Background" Value="Gold"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




    </Application.Resources>
</Application>
